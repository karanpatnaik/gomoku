{"ast":null,"code":"import{useState}from'react';import{FiRefreshCw}from\"react-icons/fi\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function board(){const[p1Wins,setp1Wins]=useState(0);const[p2Wins,setp2Wins]=useState(0);const[currentPlayer,setCurrentPlayer]=useState(1);const[winner,setWinner]=useState(null);const[board,setBoard]=useState(()=>Array.from({length:15},()=>Array(15).fill('')));function restartGame(){setBoard(Array.from({length:15},()=>Array(15).fill('')));setCurrentPlayer(1);}function resetScore(){setp1Wins(0);setp2Wins(0);}function handleClick(row,col){console.log('clicked');if(board[row][col]!==''||winner){return;}const newBoard=board.map((r,i)=>r.map((cell,j)=>i===row&&j===col?currentPlayer:cell));setBoard(newBoard);if(checkWins(currentPlayer,newBoard,row,col)){setWinner(currentPlayer);if(currentPlayer===1){setp1Wins(p1Wins+1);}else{setp2Wins(p2Wins+1);}}else{setCurrentPlayer(currentPlayer===1?2:1);}}return/*#__PURE__*/_jsx(\"div\",{className:\"board-container\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ScoreBoard,{p1Wins:p1Wins,p2Wins:p2Wins}),board.map((row,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:row.map((cell,j)=>/*#__PURE__*/_jsx(Square,{value:cell,onSquareClick:()=>handleClick(i,j),hasDot:hasDot(i,j),currentPlayer:currentPlayer,isOccupied:cell!=='',hasWinner:winner},\"\".concat(i,\"-\").concat(j)))},i)),/*#__PURE__*/_jsx(\"div\",{className:\"restart\",children:/*#__PURE__*/_jsx(\"button\",{className:\"restart-button\",onClick:restartGame,children:/*#__PURE__*/_jsx(FiRefreshCw,{size:24})})})]})});}function Square(_ref){let{value,onSquareClick,hasDot,currentPlayer,isOccupied}=_ref;const[hovered,setHovered]=useState(false);const showPreview=!isOccupied&&hovered;let stoneClass=\"\";if(value===1)stoneClass=\"stone black\";else if(value===2)stoneClass=\"stone white\";let previewClass=\"\";if(showPreview){previewClass=currentPlayer===1?\"stone preview black\":\"stone preview white\";}return/*#__PURE__*/_jsxs(\"button\",{className:\"square\",onClick:onSquareClick,onMouseEnter:()=>{console.log('hovered');setHovered(true);},onMouseLeave:()=>setHovered(false),children:[value!==''&&/*#__PURE__*/_jsx(\"div\",{className:stoneClass}),showPreview&&/*#__PURE__*/_jsx(\"div\",{className:previewClass}),hasDot&&/*#__PURE__*/_jsx(\"div\",{className:\"dot\"})]});}/*   \n    let stoneClass = \"\"; \n    if(value === 1) stoneClass = \"stone black\";\n    else if (value === 2) stoneClass = \"stone white\"; \n    return(\n      <button className=\"square\" onClick={onSquareClick} >\n        <div className={stoneClass}></div>\n        {hasDot && <div className=\"dot\"></div>}\n      </button>\n    */function hasDot(i,j){return i===6&&j===6||(i===2||i===10)&&(j===2||j===10);}function ScoreBoard(_ref2){let{p1Wins,p2Wins}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"scoreboard\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"score p1Wins\",children:[\" \",p1Wins]}),/*#__PURE__*/_jsx(\"h1\",{className:\"seperator\",children:\" - \"}),/*#__PURE__*/_jsxs(\"h1\",{className:\"score p2Wins\",children:[\" \",p2Wins]})]});}function checkWins(currentPlayer,board,row,col){const player=board[row][col];const directions=[[0,1],[1,0],[1,1],[1,-1]];const isValid=(r,c)=>r>=0&&r<15&&c>=0&&c<15;for(let[dr,dc]of directions){let count=1;//forwards\nlet r=row+dr,c=col+dc;while(isValid(r,c)&&board[r][c]===player){count++;r+=dr;c+=dc;}//backwards\nr=row-dr;c=col-dc;while(isValid(r,c)&&board[r][c]===player){count++;r-=dr;c-=dc;}if(count>=5){return true;}}return false;}","map":{"version":3,"names":["useState","FiRefreshCw","jsx","_jsx","jsxs","_jsxs","board","p1Wins","setp1Wins","p2Wins","setp2Wins","currentPlayer","setCurrentPlayer","winner","setWinner","setBoard","Array","from","length","fill","restartGame","resetScore","handleClick","row","col","console","log","newBoard","map","r","i","cell","j","checkWins","className","children","ScoreBoard","Square","value","onSquareClick","hasDot","isOccupied","hasWinner","concat","onClick","size","_ref","hovered","setHovered","showPreview","stoneClass","previewClass","onMouseEnter","onMouseLeave","_ref2","player","directions","isValid","c","dr","dc","count"],"sources":["/Users/karanpatnaik/gomoku/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react'; \nimport { FiRefreshCw } from \"react-icons/fi\";\n\n\nexport default function board(){\n    const [p1Wins, setp1Wins] = useState(0);\n    const [p2Wins, setp2Wins] = useState(0);\n    const[currentPlayer, setCurrentPlayer] = useState(1);\n    const [winner, setWinner] = useState(null);\n    const[board, setBoard] = useState(() => Array.from({length: 15}, () => Array(15).fill('')))\n    function restartGame(){\n        setBoard(Array.from({ length: 15 }, () => Array(15).fill('')));\n        setCurrentPlayer(1);\n    }\n    function resetScore() {\n       setp1Wins(0);\n       setp2Wins(0);\n     }\n    function handleClick(row, col){\n        console.log('clicked');\n        if(board[row][col] !== ''|| winner ){\n            return;\n        }\n        const newBoard = board.map((r, i) =>\n            r.map((cell, j) => (i === row && j === col ?  currentPlayer : cell))\n        );\n    setBoard(newBoard); \n    if(checkWins(currentPlayer, newBoard, row, col)){\n        setWinner(currentPlayer);\n        if (currentPlayer === 1) {\n            setp1Wins(p1Wins + 1);\n        } else {\n            setp2Wins(p2Wins + 1);\n        }\n    }else{\n        setCurrentPlayer(currentPlayer === 1 ? 2 : 1); \n    }\n    }\n    return (\n        <div className=\"board-container\">\n            <div>\n            <ScoreBoard p1Wins={p1Wins} p2Wins={p2Wins}/>\n                {board.map((row, i) => (\n                    <div key={i} className=\"row\">\n                        {row.map((cell, j) => (\n                            <Square \n                             key={`${i}-${j}`}\n                             value={cell}\n                             onSquareClick={() => handleClick(i, j)}\n                             hasDot = {hasDot(i, j)}\n                             currentPlayer={currentPlayer}\n                             isOccupied={cell !== ''}\n                             hasWinner={winner}\n                            />\n                        ))}\n                </div>\n                ))}\n              <div className=\"restart\">\n                  <button className=\"restart-button\" onClick={restartGame}>\n                     <FiRefreshCw size={24} />\n                   </button>\n             </div>\n            </div>\n        </div>\n    )\n}\nfunction Square({ value, onSquareClick, hasDot, currentPlayer, isOccupied }) {\n    const [hovered, setHovered] = useState(false);\n    const showPreview = !isOccupied && hovered;\n  \n    let stoneClass = \"\";\n    if (value === 1) stoneClass = \"stone black\";\n    else if (value === 2) stoneClass = \"stone white\";\n  \n    let previewClass = \"\";\n    if (showPreview) {\n      previewClass = currentPlayer === 1 ? \"stone preview black\" : \"stone preview white\";\n    }\n  \n    return (\n      <button\n        className=\"square\"\n        onClick={onSquareClick}\n        onMouseEnter={() => {\n          console.log('hovered');\n          setHovered(true);\n        }}\n        onMouseLeave={() => setHovered(false)}\n\n      >\n        {/* Real stone */}\n        {value !== '' && <div className={stoneClass}></div>}\n  \n        {/* Ghost stone preview */}\n        {showPreview && <div className={previewClass}></div>}\n  \n        {/* Board dot */}\n        {hasDot && <div className=\"dot\"></div>}\n      </button>\n    );\n  }\n   /*   \n    let stoneClass = \"\"; \n    if(value === 1) stoneClass = \"stone black\";\n    else if (value === 2) stoneClass = \"stone white\"; \n    return(\n      <button className=\"square\" onClick={onSquareClick} >\n        <div className={stoneClass}></div>\n        {hasDot && <div className=\"dot\"></div>}\n      </button>\n    */\n\nfunction hasDot(i, j){\n    return(\n        (i === 6 && j === 6) || \n        ((i === 2 || i === 10) &&\n        (j ===2 || j=== 10)\n        )   \n    );\n}\nfunction ScoreBoard({p1Wins, p2Wins}){\n    return(\n      <div className=\"scoreboard\">\n         <h1 className=\"score p1Wins\"> {p1Wins}</h1>\n          <h1 className=\"seperator\"> - </h1>\n        <h1 className=\"score p2Wins\"> {p2Wins}</h1>\n      </div>\n    )\n  }\nfunction checkWins(currentPlayer, board, row, col){\n    const player = board[row][col];\n    const directions = [[0, 1], [1, 0], [1, 1], [1, -1]];\n    const isValid = (r,c) => r >= 0 && r < 15 && c>=0 && c < 15;\n    for(let [dr, dc] of directions){\n        let count = 1; \n\n        //forwards\n        let r = row + dr, c = col + dc; \n        while(isValid(r,c)  && board[r][c] === player){\n            count++;\n            r+= dr;\n            c+= dc; \n        }\n        //backwards\n        r = row - dr; c = col - dc; \n        while(isValid(r,c) && board[r][c] === player){\n            count++; \n            r -= dr; \n            c -= dc; \n        }\n        if(count >= 5){\n            return true; \n        }\n    }\n    return false; \n    \n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}