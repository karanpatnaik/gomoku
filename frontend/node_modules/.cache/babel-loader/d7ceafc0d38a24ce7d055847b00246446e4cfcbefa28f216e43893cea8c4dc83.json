{"ast":null,"code":"var _jsxFileName = \"/Users/karanpatnaik/gomoku/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { FiRefreshCw } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function board() {\n  _s();\n  const [p1Wins, setp1Wins] = useState(0);\n  const [p2Wins, setp2Wins] = useState(0);\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [winner, setWinner] = useState(null);\n  const [board, setBoard] = useState(() => Array.from({\n    length: 15\n  }, () => Array(15).fill('')));\n  function restartGame() {\n    setBoard(Array.from({\n      length: 15\n    }, () => Array(15).fill('')));\n    setCurrentPlayer(1);\n  }\n  function resetScore() {\n    let i;\n  }\n  function handleClick(row, col) {\n    console.log('clicked');\n    if (board[row][col] !== '' || winner) {\n      return;\n    }\n    const newBoard = board.map((r, i) => r.map((cell, j) => i === row && j === col ? currentPlayer : cell));\n    setBoard(newBoard);\n    if (checkWins(newBoard, row, col)) {\n      setWinner(currentPlayer);\n      console.log(\"Player\", currentPlayer, \"wins!\");\n    } else {\n      setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ScoreBoard, {\n        p1Wins: p1Wins,\n        p2Wins: p2Wins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), board.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(Square, {\n          value: cell,\n          onSquareClick: () => handleClick(i, j),\n          hasDot: hasDot(i, j)\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restart\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-button\",\n          onClick: restartGame,\n          children: /*#__PURE__*/_jsxDEV(FiRefreshCw, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: resetScore,\n          children: \"Reset Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(board, \"Y1G82EOMv6GbHkzlKMH23A4ZhW0=\");\nfunction Square({\n  value,\n  onSquareClick,\n  hasDot\n}) {\n  let stoneClass = \"\";\n  if (value === 1) stoneClass = \"stone black\";else if (value === 2) stoneClass = \"stone white\";\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: stoneClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), hasDot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this)\n  // <button className=\"square\" onClick={onSquareClick}>\n  //     {value}\n  // </button>\n  ;\n}\n_c = Square;\n;\nfunction hasDot(i, j) {\n  return i === 6 && j === 6 || (i === 2 || i === 10) && (j === 2 || j === 10);\n}\nfunction ScoreBoard({\n  p1Wins,\n  p2Wins\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scoreboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"score p1Wins\",\n      children: [\" \", p1Wins]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"seperator\",\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"score p2Wins\",\n      children: [\" \", p2Wins]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n}\n_c2 = ScoreBoard;\nfunction checkWins(board, row, col) {\n  const player = board[row][col];\n  const directions = [[0, 1], [1, 0], [1, 1], [1, -1]];\n  const isValid = (r, c) => r >= 0 && r < 15 && c >= 0 && c < 15;\n  for (let [dr, dc] of directions) {\n    let count = 1;\n\n    //forwards\n    let r = row + dr,\n      c = col + dc;\n    while (isValid(r, c) && board[r][c] === player) {\n      count++;\n      r += dr;\n      c += dc;\n    }\n    //backwards\n    r = row - dr;\n    c = col - dc;\n    while (isValid(r, c) && board[r][c] === player) {\n      count++;\n      r -= dr;\n      c -= dc;\n    }\n    if (count >= 5) {\n      currentPlayer === 1 ? setp1Wins(p1Wins + 1) : setp2Wins(p2Wins + 1);\n      return true;\n    }\n  }\n  return false;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"ScoreBoard\");","map":{"version":3,"names":["useState","FiRefreshCw","jsxDEV","_jsxDEV","board","_s","p1Wins","setp1Wins","p2Wins","setp2Wins","currentPlayer","setCurrentPlayer","winner","setWinner","setBoard","Array","from","length","fill","restartGame","resetScore","i","handleClick","row","col","console","log","newBoard","map","r","cell","j","checkWins","className","children","ScoreBoard","fileName","_jsxFileName","lineNumber","columnNumber","Square","value","onSquareClick","hasDot","onClick","size","stoneClass","_c","_c2","player","directions","isValid","c","dr","dc","count","$RefreshReg$"],"sources":["/Users/karanpatnaik/gomoku/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react'; \nimport { FiRefreshCw } from \"react-icons/fi\";\n\n\nexport default function board(){\n    const [p1Wins, setp1Wins] = useState(0);\n    const [p2Wins, setp2Wins] = useState(0);\n    const[currentPlayer, setCurrentPlayer] = useState(1);\n    const [winner, setWinner] = useState(null);\n    const[board, setBoard] = useState(() => Array.from({length: 15}, () => Array(15).fill('')))\n    function restartGame(){\n        setBoard(Array.from({ length: 15 }, () => Array(15).fill('')));\n        setCurrentPlayer(1);\n    }\n    function resetScore(){\n        let i; \n    }\n    function handleClick(row, col){\n        console.log('clicked');\n        if(board[row][col] !== ''|| winner ){\n            return;\n        }\n        const newBoard = board.map((r, i) =>\n            r.map((cell, j) => (i === row && j === col ?  currentPlayer : cell))\n    );\n    setBoard(newBoard); \n    if(checkWins(newBoard, row, col)){\n        setWinner(currentPlayer);\n        console.log(\"Player\", currentPlayer, \"wins!\");\n    }else{\n        setCurrentPlayer(currentPlayer === 1 ? 2 : 1); \n    }\n    }\n    return (\n        <div className=\"board-container\">\n            <div>\n            <ScoreBoard p1Wins={p1Wins} p2Wins={p2Wins}/>\n                {board.map((row, i) => (\n                    <div key={i} className=\"row\">\n                        {row.map((cell, j) => (\n                            <Square \n                             key={`${i}-${j}`}\n                             value={cell}\n                             onSquareClick={() => handleClick(i, j)}\n                             hasDot = {hasDot(i, j)}\n                            />\n                        ))}\n                </div>\n                ))}\n              <div className=\"restart\">\n                  <button className=\"restart-button\" onClick={restartGame}>\n                     <FiRefreshCw size={24} />\n                   </button>\n                  <button className=\"reset-button\" onClick={resetScore}>\n                      Reset Scores\n                 </button>\n             </div>\n            </div>\n        </div>\n    )\n}\nfunction Square({value, onSquareClick, hasDot}){\n    let stoneClass = \"\"; \n    if(value === 1) stoneClass = \"stone black\";\n    else if (value === 2) stoneClass = \"stone white\"; \n    return(\n      <button className=\"square\" onClick={onSquareClick} >\n        <div className={stoneClass}></div>\n        {hasDot && <div className=\"dot\"></div>}\n      </button>\n        // <button className=\"square\" onClick={onSquareClick}>\n        //     {value}\n       // </button>\n    )\n};\nfunction hasDot(i, j){\n    return(\n        (i === 6 && j === 6) || \n        ((i === 2 || i === 10) &&\n        (j ===2 || j=== 10)\n        )   \n    );\n}\nfunction ScoreBoard({p1Wins, p2Wins}){\n    return(\n      <div className=\"scoreboard\">\n            <h1 className=\"score p1Wins\"> {p1Wins}</h1>\n          <h1 className=\"seperator\"> - </h1>\n        <h1 className=\"score p2Wins\"> {p2Wins}</h1>\n      </div>\n    )\n  }\nfunction checkWins(board, row, col){\n    const player = board[row][col];\n    const directions = [[0, 1], [1, 0], [1, 1], [1, -1]];\n    const isValid = (r,c) => r >= 0 && r < 15 && c>=0 && c < 15;\n    for(let [dr, dc] of directions){\n        let count = 1; \n\n        //forwards\n        let r = row + dr, c = col + dc; \n        while(isValid(r,c)  && board[r][c] === player){\n            count++;\n            r+= dr;\n            c+= dc; \n        }\n        //backwards\n        r = row - dr; c = col - dc; \n        while(isValid(r,c) && board[r][c] === player){\n            count++; \n            r -= dr; \n            c -= dc; \n        }\n        if(count >= 5){\n            currentPlayer === 1 ? setp1Wins(p1Wins +1 ) : setp2Wins(p2Wins +1 );\n            return true; \n        }\n    }\n    return false; \n    \n\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,eAAe,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAK,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACpD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAK,CAACI,KAAK,EAAEU,QAAQ,CAAC,GAAGd,QAAQ,CAAC,MAAMe,KAAK,CAACC,IAAI,CAAC;IAACC,MAAM,EAAE;EAAE,CAAC,EAAE,MAAMF,KAAK,CAAC,EAAE,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3F,SAASC,WAAWA,CAAA,EAAE;IAClBL,QAAQ,CAACC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,MAAMF,KAAK,CAAC,EAAE,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9DP,gBAAgB,CAAC,CAAC,CAAC;EACvB;EACA,SAASS,UAAUA,CAAA,EAAE;IACjB,IAAIC,CAAC;EACT;EACA,SAASC,WAAWA,CAACC,GAAG,EAAEC,GAAG,EAAC;IAC1BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAGtB,KAAK,CAACmB,GAAG,CAAC,CAACC,GAAG,CAAC,KAAK,EAAE,IAAGZ,MAAM,EAAE;MAChC;IACJ;IACA,MAAMe,QAAQ,GAAGvB,KAAK,CAACwB,GAAG,CAAC,CAACC,CAAC,EAAER,CAAC,KAC5BQ,CAAC,CAACD,GAAG,CAAC,CAACE,IAAI,EAAEC,CAAC,KAAMV,CAAC,KAAKE,GAAG,IAAIQ,CAAC,KAAKP,GAAG,GAAId,aAAa,GAAGoB,IAAK,CAC3E,CAAC;IACDhB,QAAQ,CAACa,QAAQ,CAAC;IAClB,IAAGK,SAAS,CAACL,QAAQ,EAAEJ,GAAG,EAAEC,GAAG,CAAC,EAAC;MAC7BX,SAAS,CAACH,aAAa,CAAC;MACxBe,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEhB,aAAa,EAAE,OAAO,CAAC;IACjD,CAAC,MAAI;MACDC,gBAAgB,CAACD,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjD;EACA;EACA,oBACIP,OAAA;IAAK8B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5B/B,OAAA;MAAA+B,QAAA,gBACA/B,OAAA,CAACgC,UAAU;QAAC7B,MAAM,EAAEA,MAAO;QAACE,MAAM,EAAEA;MAAO;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACxCnC,KAAK,CAACwB,GAAG,CAAC,CAACL,GAAG,EAAEF,CAAC,kBACdlB,OAAA;QAAa8B,SAAS,EAAC,KAAK;QAAAC,QAAA,EACvBX,GAAG,CAACK,GAAG,CAAC,CAACE,IAAI,EAAEC,CAAC,kBACb5B,OAAA,CAACqC,MAAM;UAENC,KAAK,EAAEX,IAAK;UACZY,aAAa,EAAEA,CAAA,KAAMpB,WAAW,CAACD,CAAC,EAAEU,CAAC,CAAE;UACvCY,MAAM,EAAIA,MAAM,CAACtB,CAAC,EAAEU,CAAC;QAAE,GAHlB,GAAGV,CAAC,IAAIU,CAAC,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB,CACJ;MAAC,GARIlB,CAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACJ,CAAC,eACJpC,OAAA;QAAK8B,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpB/B,OAAA;UAAQ8B,SAAS,EAAC,gBAAgB;UAACW,OAAO,EAAEzB,WAAY;UAAAe,QAAA,eACrD/B,OAAA,CAACF,WAAW;YAAC4C,IAAI,EAAE;UAAG;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACVpC,OAAA;UAAQ8B,SAAS,EAAC,cAAc;UAACW,OAAO,EAAExB,UAAW;UAAAc,QAAA,EAAC;QAEvD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClC,EAAA,CAxDuBD,KAAK;AAyD7B,SAASoC,MAAMA,CAAC;EAACC,KAAK;EAAEC,aAAa;EAAEC;AAAM,CAAC,EAAC;EAC3C,IAAIG,UAAU,GAAG,EAAE;EACnB,IAAGL,KAAK,KAAK,CAAC,EAAEK,UAAU,GAAG,aAAa,CAAC,KACtC,IAAIL,KAAK,KAAK,CAAC,EAAEK,UAAU,GAAG,aAAa;EAChD,oBACE3C,OAAA;IAAQ8B,SAAS,EAAC,QAAQ;IAACW,OAAO,EAAEF,aAAc;IAAAR,QAAA,gBAChD/B,OAAA;MAAK8B,SAAS,EAAEa;IAAW;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACjCI,MAAM,iBAAIxC,OAAA;MAAK8B,SAAS,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC;EACN;EACA;EACD;EAAA;AAEP;AAACQ,EAAA,GAbQP,MAAM;AAad;AACD,SAASG,MAAMA,CAACtB,CAAC,EAAEU,CAAC,EAAC;EACjB,OACKV,CAAC,KAAK,CAAC,IAAIU,CAAC,KAAK,CAAC,IAClB,CAACV,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,EAAE,MACpBU,CAAC,KAAI,CAAC,IAAIA,CAAC,KAAI,EAAE,CACjB;AAET;AACA,SAASI,UAAUA,CAAC;EAAC7B,MAAM;EAAEE;AAAM,CAAC,EAAC;EACjC,oBACEL,OAAA;IAAK8B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACrB/B,OAAA;MAAI8B,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,GAAC,EAAC5B,MAAM;IAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7CpC,OAAA;MAAI8B,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCpC,OAAA;MAAI8B,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,GAAC,EAAC1B,MAAM;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACS,GAAA,GARMb,UAAU;AASnB,SAASH,SAASA,CAAC5B,KAAK,EAAEmB,GAAG,EAAEC,GAAG,EAAC;EAC/B,MAAMyB,MAAM,GAAG7C,KAAK,CAACmB,GAAG,CAAC,CAACC,GAAG,CAAC;EAC9B,MAAM0B,UAAU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMC,OAAO,GAAGA,CAACtB,CAAC,EAACuB,CAAC,KAAKvB,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAG,EAAE,IAAIuB,CAAC,IAAE,CAAC,IAAIA,CAAC,GAAG,EAAE;EAC3D,KAAI,IAAI,CAACC,EAAE,EAAEC,EAAE,CAAC,IAAIJ,UAAU,EAAC;IAC3B,IAAIK,KAAK,GAAG,CAAC;;IAEb;IACA,IAAI1B,CAAC,GAAGN,GAAG,GAAG8B,EAAE;MAAED,CAAC,GAAG5B,GAAG,GAAG8B,EAAE;IAC9B,OAAMH,OAAO,CAACtB,CAAC,EAACuB,CAAC,CAAC,IAAKhD,KAAK,CAACyB,CAAC,CAAC,CAACuB,CAAC,CAAC,KAAKH,MAAM,EAAC;MAC1CM,KAAK,EAAE;MACP1B,CAAC,IAAGwB,EAAE;MACND,CAAC,IAAGE,EAAE;IACV;IACA;IACAzB,CAAC,GAAGN,GAAG,GAAG8B,EAAE;IAAED,CAAC,GAAG5B,GAAG,GAAG8B,EAAE;IAC1B,OAAMH,OAAO,CAACtB,CAAC,EAACuB,CAAC,CAAC,IAAIhD,KAAK,CAACyB,CAAC,CAAC,CAACuB,CAAC,CAAC,KAAKH,MAAM,EAAC;MACzCM,KAAK,EAAE;MACP1B,CAAC,IAAIwB,EAAE;MACPD,CAAC,IAAIE,EAAE;IACX;IACA,IAAGC,KAAK,IAAI,CAAC,EAAC;MACV7C,aAAa,KAAK,CAAC,GAAGH,SAAS,CAACD,MAAM,GAAE,CAAE,CAAC,GAAGG,SAAS,CAACD,MAAM,GAAE,CAAE,CAAC;MACnE,OAAO,IAAI;IACf;EACJ;EACA,OAAO,KAAK;AAGhB;AAAC,IAAAuC,EAAA,EAAAC,GAAA;AAAAQ,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAR,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}