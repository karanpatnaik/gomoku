{"ast":null,"code":"var _jsxFileName = \"/Users/karanpatnaik/gomoku/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function board() {\n  _s();\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [winner, setWinner] = useState(null);\n  const [board, setBoard] = useState(() => Array.from({\n    length: 15\n  }, () => Array(15).fill(0)));\n  function restartGame() {\n    setSquares(Array.from({\n      length: 15\n    }, () => Array(15).fill(7)));\n    setXisNext(true);\n  }\n  function handleClick(row, col) {\n    console.log(\"Clicked:\", row, col);\n    if (board[row][col] !== 0 || winner) {\n      return;\n    }\n    const newBoard = board.map((r, i) => r.map((cell, j) => i === row && j === col ? currentPlayer : cell));\n    setBoard(newBoard);\n    if (checkWins(newBoard, row, col)) {\n      setWinner(currentPlayer);\n      console.log(\"Player\", currentPlayer, \"wins!\");\n    }\n    setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: board.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(Square, {\n          value: cell,\n          onSquareClick: () => handleClick(i, j)\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(board, \"5soacC3MLrPmTSsZT2MqOBSDN6I=\");\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  let className = \"square\";\n  if (value === \"X\") className += \" x-color\";else if (value === \"O\") className += \" o-color\";\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_c = Square;\n;\nfunction checkWins(board, row, col) {\n  const player = board[row][col];\n  const directions = [[0, 1], [1, 0], [1, 1], [1, -1]];\n  const isValid = (r, c) => r >= 0 && r < 15 && c >= 0 && c < 15;\n  for (let [dr, dc] of directions) {\n    let count = 1;\n\n    //forwards\n    let r = row + dr,\n      c = col + dc;\n    while (isValid(r, c) && board[r][c] === player) {\n      count++;\n      r += dr;\n      c += dc;\n    }\n    //backwards\n    r = row - dr;\n    c = col - dc;\n    while (isValid(r, c) && board[r][c] === player) {\n      count++;\n      r -= dr;\n      c -= dc;\n    }\n    if (count >= 5) {\n      return true;\n    }\n  }\n  return false;\n}\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","board","_s","currentPlayer","setCurrentPlayer","winner","setWinner","setBoard","Array","from","length","fill","restartGame","setSquares","setXisNext","handleClick","row","col","console","log","newBoard","map","r","i","cell","j","checkWins","className","children","Square","value","onSquareClick","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","player","directions","isValid","c","dr","dc","count","$RefreshReg$"],"sources":["/Users/karanpatnaik/gomoku/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react'; \n\nexport default function board(){\n    const[currentPlayer, setCurrentPlayer] = useState(1);\n    const [winner, setWinner] = useState(null);\n\n    const[board, setBoard] = useState(() => Array.from({length: 15}, () => Array(15).fill(0)))\n    function restartGame(){\n        setSquares(Array.from({ length: 15 }, () => Array(15).fill(7)));\n        setXisNext(true);\n    }\n    function handleClick(row, col){\n        console.log(\"Clicked:\", row, col);\n\n        if(board[row][col] !== 0 || winner ){\n            return;\n        }\n        const newBoard = board.map((r, i) =>\n            r.map((cell, j) => (i === row && j === col ?  currentPlayer : cell))\n    );\n    setBoard(newBoard); \n    if(checkWins(newBoard, row, col)){\n        setWinner(currentPlayer);\n        console.log(\"Player\", currentPlayer, \"wins!\");\n    }\n    setCurrentPlayer(currentPlayer === 1 ? 2 : 1); \n    }\n    return (\n        <div className=\"board-container\">\n            <div>\n                {board.map((row, i) => (\n                    <div key={i} className=\"row\">\n                        {row.map((cell, j) => (\n                            <Square \n                             key={`${i}-${j}`}\n                             value={cell}\n                             onSquareClick={() => handleClick(i, j)}\n                            />\n                        ))}\n                </div>\n                ))}\n            </div>\n        </div>\n    )\n}\nfunction Square({value, onSquareClick}){\n    let className = \"square\"; \n    if(value === \"X\") className += \" x-color\";\n    else if (value === \"O\") className += \" o-color\"; \n    return(\n        <button className={className} onClick={onSquareClick}>\n             {value}\n        </button>\n    )\n};\nfunction checkWins(board, row, col){\n    const player = board[row][col];\n    const directions = [[0, 1], [1, 0], [1, 1], [1, -1]];\n    const isValid = (r,c) => r >= 0 && r < 15 && c>=0 && c < 15;\n    for(let [dr, dc] of directions){\n        let count = 1; \n\n        //forwards\n        let r = row + dr, c = col + dc; \n        while(isValid(r,c)  && board[r][c] === player){\n            count++;\n            r+= dr;\n            c+= dc; \n        }\n        //backwards\n        r = row - dr; c = col - dc; \n        while(isValid(r,c) && board[r][c] === player){\n            count++; \n            r -= dr; \n            c -= dc; \n        }\n        if(count >= 5){\n            return true; \n        }\n    }\n    return false; \n    \n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}